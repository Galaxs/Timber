warning: in the working copy of '.vscode/tasks.json', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.vscode/tasks.json b/.vscode/tasks.json[m
[1mindex f4ebfa7..8e9d38b 100644[m
[1m--- a/.vscode/tasks.json[m
[1m+++ b/.vscode/tasks.json[m
[36m@@ -4,11 +4,8 @@[m
         {[m
             "label": "Build C++ project",[m
             "type": "shell",[m
[31m-            "group": {[m
[31m-                "kind": "build",[m
[31m-                "isDefault": true[m
[31m-            },[m
[31m-            "command": "make",[m
[32m+[m[32m            "group": "build",[m
[32m+[m[32m            "command": "make"[m
         },[m
         {[m
             "label": "Build & run C++ project",[m
[36m@@ -21,6 +18,29 @@[m
             "args": [[m
                 "run"[m
             ][m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m            "type": "cppbuild",[m
[32m+[m[32m            "label": "C/C++: cpp.exe build active file",[m
[32m+[m[32m            "command": "C:\\msys64\\mingw64\\bin\\cpp.exe",[m
[32m+[m[32m            "args": [[m
[32m+[m[32m                "-fdiagnostics-color=always",[m
[32m+[m[32m                "-g",[m
[32m+[m[32m                "${file}",[m
[32m+[m[32m                "-o",[m
[32m+[m[32m                "${fileDirname}\\${fileBasenameNoExtension}.exe"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "options": {[m
[32m+[m[32m                "cwd": "${fileDirname}"[m
[32m+[m[32m            },[m
[32m+[m[32m            "problemMatcher": [[m
[32m+[m[32m                "$gcc"[m
[32m+[m[32m            ],[m
[32m+[m[32m            "group": {[m
[32m+[m[32m                "kind": "build",[m
[32m+[m[32m                "isDefault": true[m
[32m+[m[32m            },[m
[32m+[m[32m            "detail": "Task generated by Debugger."[m
         }[m
     ][m
 }[m
\ No newline at end of file[m
[1mdiff --git a/Makefile b/Makefile[m
[1mindex 0c8b832..f48c8cf 100644[m
[1m--- a/Makefile[m
[1m+++ b/Makefile[m
[36m@@ -5,7 +5,7 @@[m [mcompile:[m
 	g++ -I src/include -c main.cpp[m
 [m
 link:[m
[31m-	g++ main.o -o main -Lsrc/lib -lsfml-graphics -lsfml-window -lsfml-system[m
[32m+[m	[32mg++ main.o -o main -L src/lib -lsfml-graphics -lsfml-window -lsfml-system[m
 	main.exe[m
 CXX		  := g++[m
 CXX_FLAGS := -Wall -Wextra -std=c++17 -ggdb[m
[1mdiff --git a/bin/main b/bin/main[m
[1mdeleted file mode 100755[m
[1mindex 40532a5..0000000[m
Binary files a/bin/main and /dev/null differ
[1mdiff --git a/build/.cmake/api/v1/reply/index-2023-05-28T22-27-27-0935.json b/build/.cmake/api/v1/reply/index-2023-05-28T22-27-27-0935.json[m
[1mdeleted file mode 100644[m
[1mindex 6a3137b..0000000[m
[1m--- a/build/.cmake/api/v1/reply/index-2023-05-28T22-27-27-0935.json[m
[1m+++ /dev/null[m
[36m@@ -1,132 +0,0 @@[m
[31m-{[m
[31m-	"cmake" : [m
[31m-	{[m
[31m-		"generator" : [m
[31m-		{[m
[31m-			"multiConfig" : false,[m
[31m-			"name" : "MinGW Makefiles"[m
[31m-		},[m
[31m-		"paths" : [m
[31m-		{[m
[31m-			"cmake" : "C:/msys64/mingw64/bin/cmake.exe",[m
[31m-			"cpack" : "C:/msys64/mingw64/bin/cpack.exe",[m
[31m-			"ctest" : "C:/msys64/mingw64/bin/ctest.exe",[m
[31m-			"root" : "C:/msys64/mingw64/share/cmake"[m
[31m-		},[m
[31m-		"version" : [m
[31m-		{[m
[31m-			"isDirty" : false,[m
[31m-			"major" : 3,[m
[31m-			"minor" : 25,[m
[31m-			"patch" : 1,[m
[31m-			"string" : "3.25.1",[m
[31m-			"suffix" : ""[m
[31m-		}[m
[31m-	},[m
[31m-	"objects" : [m
[31m-	[[m
[31m-		{[m
[31m-			"jsonFile" : "codemodel-v2-fea09dd4dafd618b6a2d.json",[m
[31m-			"kind" : "codemodel",[m
[31m-			"version" : [m
[31m-			{[m
[31m-				"major" : 2,[m
[31m-				"minor" : 4[m
[31m-			}[m
[31m-		},[m
[31m-		{[m
[31m-			"jsonFile" : "cache-v2-f455ded7af794d5cc363.json",[m
[31m-			"kind" : "cache",[m
[31m-			"version" : [m
[31m-			{[m
[31m-				"major" : 2,[m
[31m-				"minor" : 0[m
[31m-			}[m
[31m-		},[m
[31m-		{[m
[31m-			"jsonFile" : "cmakeFiles-v1-07db260836fdc9e67305.json",[m
[31m-			"kind" : "cmakeFiles",[m
[31m-			"version" : [m
[31m-			{[m
[31m-				"major" : 1,[m
[31m-				"minor" : 0[m
[31m-			}[m
[31m-		},[m
[31m-		{[m
[31m-			"jsonFile" : "toolchains-v1-45637917251a28352e49.json",[m
[31m-			"kind" : "toolchains",[m
[31m-			"version" : [m
[31m-			{[m
[31m-				"major" : 1,[m
[31m-				"minor" : 0[m
[31m-			}[m
[31m-		}[m
[31m-	],[m
[31m-	"reply" : [m
[31m-	{[m
[31m-		"client-vscode" : [m
[31m-		{[m
[31m-			"query.json" : [m
[31m-			{[m
[31m-				"requests" : [m
[31m-				[[m
[31m-					{[m
[31m-						"kind" : "cache",[m
[31m-						"version" : 2[m
[31m-					},[m
[31m-					{[m
[31m-						"kind" : "codemodel",[m
[31m-						"version" : 2[m
[31m-					},[m
[31m-					{[m
[31m-						"kind" : "toolchains",[m
[31m-						"version" : 1[m
[31m-					},[m
[31m-					{[m
[31m-						"kind" : "cmakeFiles",[m
[31m-						"version" : 1[m
[31m-					}[m
[31m-				],[m
[31m-				"responses" : [m
[31m-				[[m
[31m-					{[m
[31m-						"jsonFile" : "cache-v2-f455ded7af794d5cc363.json",[m
[31m-						"kind" : "cache",[m
[31m-						"version" : [m
[31m-						{[m
[31m-							"major" : 2,[m
[31m-							"minor" : 0[m
[31m-						}[m
[31m-					},[m
[31m-					{[m
[31m-						"jsonFile" : "codemodel-v2-fea09dd4dafd618b6a2d.json",[m
[31m-						"kind" : "codemodel",[m
[31m-						"version" : [m
[31m-						{[m
[31m-							"major" : 2,[m
[31m-							"minor" : 4[m
[31m-						}[m
[31m-					},[m
[31m-					{[m
[31m-						"jsonFile" : "toolchains-v1-45637917251a28352e49.json",[m
[31m-						"kind" : "toolchains",[m
[31m-						"version" : [m
[31m-						{[m
[31m-							"major" : 1,[m
[31m-							"minor" : 0[m
[31m-						}[m
[31m-					},[m
[31m-					{[m
[31m-						"jsonFile" : "cmakeFiles-v1-07db260836fdc9e67305.json",[m
[31m-						"kind" : "cmakeFiles",[m
[31m-						"version" : [m
[31m-						{[m
[31m-							"major" : 1,[m
[31m-							"minor" : 0[m
[31m-						}[m
[31m-					}[m
[31m-				][m
[31m-			}[m
[31m-		}[m
[31m-	}[m
[31m-}[m
[1mdiff --git a/build/Testing/Temporary/LastTest.log b/build/Testing/Temporary/LastTest.log[m
[1mindex 807602c..ac015f6 100644[m
[1m--- a/build/Testing/Temporary/LastTest.log[m
[1m+++ b/build/Testing/Temporary/LastTest.log[m
[36m@@ -1,3 +1,3 @@[m
[31m-Start testing: May 28 23:27 GMT Daylight Time[m
[32m+[m[32mStart testing: Jun 03 18:11 GMT Daylight Time[m
 ----------------------------------------------------------[m
[31m-End testing: May 28 23:27 GMT Daylight Time[m
[32m+[m[32mEnd testing: Jun 03 18:11 GMT Daylight Time[m
[1mdiff --git a/graphics/axe.png b/graphics/axe.png[m
[1mindex 104f7a3..bf7b690 100644[m
Binary files a/graphics/axe.png and b/graphics/axe.png differ
[1mdiff --git a/main.cpp b/main.cpp[m
[1mindex 3aa6f13..7073ee2 100644[m
[1m--- a/main.cpp[m
[1m+++ b/main.cpp[m
[36m@@ -1,6 +1,7 @@[m
[32m+[m[32m#include <sstream>[m
 #include <iostream>[m
 #include <SFML/Graphics.hpp>[m
[31m-#include <sstream>[m
[32m+[m[32m#include <SFML/Audio.hpp>[m
 [m
 [m
 using namespace sf;[m
[36m@@ -14,15 +15,11 @@[m [mint GetRandomSpeed(int fromRange, int toRange)[m
     return rnd;[m
 }[m
 [m
[31m-// void setOriginToMiddle(Drawable &obj)[m
[31m-// ([m
[31m-    [m
[31m-// )[m
 [m
 const int NUM_BRANCHES = 6;[m
 enum class side { LEFT, RIGHT, NONE};[m
 side branchesPositions[NUM_BRANCHES];[m
[31m-void UpdateBranches(int seed);[m
[32m+[m[32mvoid GenerateRandomBranches(int seed);[m
 int main()[m
 {[m
     [m
[36m@@ -33,14 +30,16 @@[m [mint main()[m
     // Variables GENERAL[m
     Vector2f defScale(0.73f, 0.70f); // Scale to all textures[m
     Vector2f treesScale(0.46f, 0.65);[m
[32m+[m[32m    Vector2f axeScale(0.34, 0.34);[m
     side playerSide = side::LEFT;[m
[31m-    const float AXE_POS_LEFT = 400;[m
[32m+[m[32m    const float AXE_POS_LEFT = 585;[m
     const float AXE_POS_RIGHT = 800;[m
     float logXSpeed = 700;[m
     float logYSpeed =  -1100;[m
     bool logActive = false;[m
     bool acceptInput = true;[m
     bool paused = true;[m
[32m+[m[32m    float startingTime = 14.0f;[m
     //bool debug = true;[m
     String message[3]={ "Press Enter", "Game Over", "0" };[m
     int score = 0;[m
[36m@@ -53,7 +52,7 @@[m [mint main()[m
     for (int i = 0; i<3; i++)[m
     {[m
         rndSpeeds[i] = GetRandomSpeed(9 * otherFraction , 10 * otherFraction);[m
[31m-        //widthFraction+=0.355f;[m
[32m+[m
         otherFraction += 4;[m
     }[m
 [m
[36m@@ -123,8 +122,8 @@[m [mint main()[m
     timeBarOutline.setOutlineColor(Color::Black);[m
     timeBarOutline.setOutlineThickness(7);[m
     Time gameTimeTotal;[m
[31m-    float timeRemaining = 9.0f;[m
[31m-    float timeBarWidthPerSecond = startWidth / timeRemaining;[m
[32m+[m[32m    float timeRemaining = startingTime;[m
[32m+[m[32m    float timeBarWidthPerSecond = startWidth / startingTime;[m
 [m
         // SETTING UP TEXTURES[m
     spriteBackground.setTexture(textureBackground);[m
[36m@@ -142,7 +141,7 @@[m [mint main()[m
         branches[i].setPosition(2000, 2000);[m
         branches[i].setOrigin(branches[i].getLocalBounds().width / 2, branches[i].getLocalBounds().height / 2);[m
     }[m
[31m-        // Player, Gravestone and Axe also log[m
[32m+[m[32m        // Player, Gravestone, Axe and log[m
     spritePlayer.setTexture(texturePlayer);[m
     spritePlayer.setScale(defScale);[m
     spritePlayer.setOrigin(spritePlayer.getLocalBounds().width / 2, spritePlayer.getLocalBounds().height / 2);[m
[36m@@ -152,9 +151,10 @@[m [mint main()[m
     spriteGravestone.setOrigin(spriteGravestone.getLocalBounds().width / 2, spriteGravestone.getLocalBounds().height / 2);[m
     spriteGravestone.setPosition(spritePlayer.getPosition().x , spritePlayer.getPosition().y);[m
     spriteAxe.setTexture(textureAxe);[m
[31m-    spriteAxe.setScale(defScale);[m
[32m+[m[32m    spriteAxe.setScale(axeScale);[m
     spriteAxe.setOrigin(spriteAxe.getLocalBounds().width / 2, spriteAxe.getLocalBounds().height / 2);[m
[31m-    spriteAxe.setPosition(spritePlayer.getPosition().x + 40, spritePlayer.getPosition().y);[m
[32m+[m[32m    spriteAxe.setScale(spriteAxe.getScale().x * -1, spriteAxe.getScale().y);[m
[32m+[m[32m    spriteAxe.setPosition(spritePlayer.getPosition().x + 95, spritePlayer.getPosition().y - 20);[m
     spriteLog.setTexture(textureLog);[m
     spriteLog.setScale(defScale);[m
     spriteLog.setOrigin(spriteLog.getLocalBounds().width / 2, spriteLog.getLocalBounds().height / 2);[m
[36m@@ -193,8 +193,8 @@[m [mint main()[m
     spriteBackground.setPosition(0, 0);[m
     spriteBee.setPosition(vm.width / GetRandomSpeed(-1.0f, 10.0f), 350);[m
 [m
[31m-    short cloudHeight = 0;[m
[31m-    for (short i = 0; i < 3; i++)[m
[32m+[m[32m    int cloudHeight = 0;[m
[32m+[m[32m    for (int i = 0; i < 3; i++)[m
     {[m
         spriteCloud[i].setPosition(vm.width * widthFraction , cloudHeight);[m
         cloudHeight += 60;[m
[36m@@ -209,7 +209,7 @@[m [mint main()[m
         Time dt = clock.restart();[m
         clock.restart();[m
 [m
[31m-        // HANDLE PLAYER INPUT[m
[32m+[m[32m        // = === = = ==  ==  = HANDLE PLAYER INPUT ---============[m
         sf::Event event;[m
         while (window.pollEvent(event))[m
         {[m
[36m@@ -224,9 +224,9 @@[m [mint main()[m
                 window.close();[m
         }[m
             // NEW GAME[m
[31m-            if (Keyboard::isKeyPressed(Keyboard::Enter))[m
[32m+[m[32m            if (Keyboard::isKeyPressed(Keyboard::Enter) && paused)[m
             {[m
[31m-                timeRemaining = 9.0f;[m
[32m+[m[32m                timeRemaining = startingTime;[m
                 score = 0;[m
                 paused = false;[m
 [m
[36m@@ -241,24 +241,29 @@[m [mint main()[m
                 spritePlayer.setPosition(vm.width / 2 - spritePlayer.getLocalBounds().width - 50, vm. height - 200);[m
                 playerSide = side::LEFT;[m
                 acceptInput = true;[m
[32m+[m[32m                spritePlayer.setScale(-defScale.x, defScale.y);[m
[32m+[m[32m                spriteAxe.setScale(-axeScale.x, axeScale.y);[m
             }[m
 [m
[31m-            if (acceptInput)[m
[32m+[m[32m            if (acceptInput && !paused)[m
             {[m
                 if(Keyboard::isKeyPressed(Keyboard::Right))[m
[31m-                {[m
[31m-                    if (playerSide == side::LEFT)[m
[32m+[m[32m                {   // Mirror the player sprite[m
[32m+[m[32m                    if (playerSide == side::LEFT)[m[41m   [m
                     {[m
[32m+[m[32m                        spriteAxe.setScale(spriteAxe.getScale().x * -1, spriteAxe.getScale().y);[m
                         spritePlayer.setScale(spritePlayer.getScale().x * -1, spritePlayer.getScale().y);[m
                     }[m
[32m+[m[32m                    // Actually change the player side[m
                     playerSide = side::RIGHT;[m
                     [m
                     score++;[m
                     timeRemaining += (2 / score) * .15;[m
                     spriteAxe.setPosition(AXE_POS_RIGHT, spriteAxe.getPosition().y);[m
                     spritePlayer.setPosition(vm.width / 2 + spritePlayer.getLocalBounds().width + 50, vm. height - 200);[m
[31m-                    UpdateBranches(score);[m
[31m-                    logXSpeed = -700;[m
[32m+[m[32m                    GenerateRandomBranches(score);[m
[32m+[m[32m                    spriteLog.setPosition(vm.width/2, (vm.height/2) + 200);[m
[32m+[m[32m                    logXSpeed = -5000;       // TODO could convert to a global var[m
                     logActive = true;[m
                     acceptInput = false;[m
 [m
[36m@@ -267,6 +272,7 @@[m [mint main()[m
                 {[m
                     if (playerSide == side::RIGHT)[m
                     {    [m
[32m+[m[32m                        spriteAxe.setScale(spriteAxe.getScale().x * -1, spriteAxe.getScale().y);[m
                         spritePlayer.setScale(spritePlayer.getScale().x * -1, spritePlayer.getScale().y);[m
                     }[m
                     playerSide = side::LEFT;[m
[36m@@ -274,10 +280,11 @@[m [mint main()[m
 [m
                     score++;[m
                     timeRemaining += (2 / score) * .15;[m
[31m-                    spriteAxe.setPosition(AXE_POS_LEFT, spriteAxe.getPosition().y);[m
[32m+[m[32m                    spriteAxe.setPosition(AXE_POS_LEFT, spriteAxe.getPosition().y );[m
                     spritePlayer.setPosition(vm.width / 2 - spritePlayer.getLocalBounds().width - 50, vm. height - 200);[m
[31m-                    UpdateBranches(score);[m
[31m-                    logXSpeed = 700;[m
[32m+[m[32m                    GenerateRandomBranches(score);[m
[32m+[m[32m                    spriteLog.setPosition(vm.width/2, (vm.height/2) + 200);[m
[32m+[m[32m                    logXSpeed = 5000;[m
                     logActive = true;[m
                     acceptInput = false;[m
                 }[m
[36m@@ -304,7 +311,7 @@[m [mint main()[m
         {[m
             [m
             timeRemaining -= dt.asSeconds();[m
[31m-            timeBar.setSize(Vector2f(timeRemaining * timeBarWidthPerSecond, timeBar.getSize().y));[m
[32m+[m[32m            timeBar.setSize(Vector2f(timeRemaining  * timeBarWidthPerSecond, timeBar.getSize().y));[m
             [m
             if (timeRemaining <= 0.0f)[m
             {[m
[36m@@ -335,7 +342,19 @@[m [mint main()[m
                 }[m
             }[m
             [m
[32m+[m[32m            // HANDLE THE FLYING LOG[m
[32m+[m[32m            if (logActive)[m
[32m+[m[32m            {[m
[32m+[m[32m                spriteLog.setPosition(spriteLog.getPosition().x + logXSpeed * dt.asSeconds(), spriteLog.getPosition().y + logYSpeed * dt.asSeconds());[m
[32m+[m[32m            }[m
 [m
[32m+[m[32m            // Has the log supassed the edge of the screen?[m
[32m+[m[32m            if (spriteLog.getPosition().x < -100 || spriteL